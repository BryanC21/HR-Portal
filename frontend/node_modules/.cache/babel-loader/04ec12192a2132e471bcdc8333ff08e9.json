{"ast":null,"code":"var _jsxFileName = \"/Users/bryancaldera/CS MS/CMPE272_Group_Project/cmpe272_final_project/frontend/src/components/admin/table_popup.js\";\nimport React, { Fragment } from 'react';\nimport { Form, Modal, Button, Card, Row, Col } from \"react-bootstrap\";\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TablePopup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: props.table ? props.table.id : '',\n      name: props.table ? props.table.name : '',\n      capacity: props.table ? props.table.capacity : 1,\n      description: props.table ? props.table.description : ''\n    };\n  }\n\n  handleNameChange(e) {\n    this.setState({\n      name: e.target.value\n    });\n  }\n\n  handleCapacityChange(e) {\n    this.setState({\n      capacity: e.target.value\n    });\n  }\n\n  handleDescriptionChange(e) {\n    this.setState({\n      description: e.target.value\n    });\n  }\n\n  handleManage() {\n    var api = process.env.REACT_APP_API || \"http://192.168.56.1:4080\";\n    var api_path = \"/api/restaurant/table/add\";\n    var body = {\n      table_name: this.state.name,\n      description: this.state.description,\n      capacity: this.state.capacity,\n      restaurant_id: this.props.restaurant.id,\n      table_status: \"Empty\",\n      token: this.props.user.token\n    };\n\n    if (this.props.operation === \"update\") {\n      api_path = \"/api/restaurant/table/update\";\n      body = {\n        table_id: this.state.id,\n        table_name: this.state.name,\n        description: this.state.description,\n        capacity: this.state.capacity,\n        table_status: this.props.table.status,\n        restaurant_id: this.props.table.restaurant_id,\n        token: this.props.user.token\n      };\n    }\n\n    fetch(api + api_path, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    }).then(response => response.json()).then(data => {\n      if (data.code === 200) {\n        body.id = data.table.id;\n      } else {\n        alert(data.message);\n      }\n    });\n    this.props.onHide();\n    this.props.getTables();\n  }\n\n  handleDelete() {\n    var api = process.env.REACT_APP_API || \"http://192.168.56.1:4080\";\n    fetch(api + \"/api/restaurant/table/delete\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        table_id: this.state.id,\n        token: this.props.user.token\n      })\n    }).then(response => response.json()).then(data => {\n      if (data.code !== 200) {\n        alert(data.message);\n      }\n    });\n    this.props.onHide();\n    this.props.getTables();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      show: this.props.show,\n      onHide: this.props.onHide,\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Table Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          className: \"form-control w-75\",\n          value: this.state.name,\n          onChange: e => this.handleNameChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Capacity:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"number\",\n          className: \"form-control w-75\",\n          min: \"1\",\n          value: this.state.capacity,\n          onChange: e => this.handleCapacityChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          className: \"form-control w-75\",\n          rows: \"3\",\n          value: this.state.description,\n          onChange: e => this.handleDescriptionChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: () => {\n            this.handleDelete();\n          },\n          children: \"Delete Table\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            this.handleManage();\n          },\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = store => {\n  return {\n    restaurant: store.restaurantState.restaurant,\n    user: store.userState.user\n  };\n};\n\nexport default connect(mapStateToProps)(TablePopup);","map":{"version":3,"names":["React","Fragment","Form","Modal","Button","Card","Row","Col","connect","TablePopup","Component","constructor","props","state","id","table","name","capacity","description","handleNameChange","e","setState","target","value","handleCapacityChange","handleDescriptionChange","handleManage","api","process","env","REACT_APP_API","api_path","body","table_name","restaurant_id","restaurant","table_status","token","user","operation","table_id","status","fetch","method","headers","JSON","stringify","then","response","json","data","code","alert","message","onHide","getTables","handleDelete","render","show","mapStateToProps","store","restaurantState","userState"],"sources":["/Users/bryancaldera/CS MS/CMPE272_Group_Project/cmpe272_final_project/frontend/src/components/admin/table_popup.js"],"sourcesContent":["import React, { Fragment } from 'react';\nimport { Form, Modal, Button, Card, Row, Col } from \"react-bootstrap\";\nimport { connect } from 'react-redux';\n\nclass TablePopup extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: props.table ? props.table.id : '',\n            name: props.table ? props.table.name : '',\n            capacity: props.table ? props.table.capacity : 1,\n            description: props.table ? props.table.description : '',\n        }\n    }\n\n    handleNameChange(e) {\n        this.setState({ name: e.target.value });\n    }\n    handleCapacityChange(e) {\n        this.setState({ capacity: e.target.value });\n    }\n    handleDescriptionChange(e) {\n        this.setState({ description: e.target.value });\n    }\n\n    handleManage() {\n        var api = process.env.REACT_APP_API || \"http://192.168.56.1:4080\";\n        var api_path = \"/api/restaurant/table/add\";\n        var body = {\n            table_name: this.state.name,\n            description: this.state.description,\n            capacity: this.state.capacity,\n            restaurant_id: this.props.restaurant.id,\n            table_status: \"Empty\",\n            token: this.props.user.token,\n        };\n        if (this.props.operation === \"update\") {\n            api_path = \"/api/restaurant/table/update\";\n            body = {\n                table_id: this.state.id,\n                table_name: this.state.name,\n                description: this.state.description,\n                capacity: this.state.capacity,\n                table_status: this.props.table.status,\n                restaurant_id: this.props.table.restaurant_id,\n                token: this.props.user.token,\n            };\n        }\n        fetch(api + api_path,\n            {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(body),\n            }\n        )\n            .then(response => response.json())\n            .then(data => {\n                if (data.code === 200) {\n                    body.id = data.table.id;\n                } else {\n                    alert(data.message);\n                }\n            })\n        this.props.onHide();\n        this.props.getTables();\n    }\n    handleDelete() {\n        var api = process.env.REACT_APP_API || \"http://192.168.56.1:4080\";\n        fetch(api + \"/api/restaurant/table/delete\",\n            {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    table_id: this.state.id,\n                    token: this.props.user.token,\n                }),\n            }\n        )\n            .then(response => response.json())\n            .then(data => {\n                if (data.code !== 200) {\n                    alert(data.message);\n                }\n            })\n        this.props.onHide();\n        this.props.getTables();\n    }\n\n\n    render() {\n        return (\n            <Modal\n                show={this.props.show}\n                onHide={this.props.onHide}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n            >\n                <Modal.Header closeButton></Modal.Header>\n                <Card.Body>\n                    <Form.Label>Table Name:</Form.Label>\n                    <Form.Control type=\"text\" className=\"form-control w-75\" value={this.state.name} onChange={e => this.handleNameChange(e)} />\n                    <Form.Label>Capacity:</Form.Label>\n                    <Form.Control type=\"number\" className=\"form-control w-75\" min=\"1\" value={this.state.capacity} onChange={e => this.handleCapacityChange(e)} />\n                    <Form.Label>Description:</Form.Label>\n                    <Form.Control as=\"textarea\" className=\"form-control w-75\" rows=\"3\" value={this.state.description} onChange={e => this.handleDescriptionChange(e)} />\n                </Card.Body>\n                <Modal.Footer>\n                    <Button variant=\"danger\" onClick={() => { this.handleDelete() }}>Delete Table</Button>\n                    <Button onClick={() => { this.handleManage() }}>Save Changes</Button>\n                </Modal.Footer>\n            </Modal>\n        )\n    }\n}\n\nconst mapStateToProps = store => {\n    return {\n        restaurant: store.restaurantState.restaurant,\n        user: store.userState.user,\n    };\n};\n\nexport default connect(mapStateToProps)(TablePopup);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}