{"ast":null,"code":"var _jsxFileName = \"/Users/bryancaldera/CS MS/CMPE272_Group_Project/cmpe272_final_project/frontend/src/components/admin/employee_list.js\";\nimport React, { Fragment } from \"react\";\nimport { Form, Button, Card, Row, Col, Container } from \"react-bootstrap\";\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass employeeItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalShow: false\n    };\n  }\n\n  render() {\n    const employees = this.props.employees;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [employees && employees.length ? employees.map((employee, index) => /*#__PURE__*/_jsxDEV(Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"mb-1 items-body\",\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: employee.emp_no\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 23,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: employee.first_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 26,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: employee.last_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 29,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: employee.dept_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 32,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: employee.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    className: \"btn btn-primary\",\n                    href: \"/user?emp_no=\" + employee.emp_no,\n                    children: \"Details\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 39,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 38,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 29\n        }, this)\n      }, `${employee}~${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true) //{\n    //    this.state.modalShow ?\n    //        <TablePopup\n    //            show={this.state.modalShow}\n    //            onHide={() => this.setState({ modalShow: false })}\n    //            table={this.state.item}\n    //            operation={this.state.operation}\n    //            getTables={this.getTables}\n    //        />\n    //        :\n    //        <></>\n    //}\n    //    <Card.Title>{table.name}</Card.Title>\n    //            <p className=\"card-text\">Capacity: {table.capacity}</p>\n    //            <p className=\"card-text\">Description: {table.description}</p>\n    //            <p className=\"card-text\">Table Status: {statusMap[table.status]}</p>\n    //            <Form.Group>\n    //                <Form.Label>Status</Form.Label>\n    //                <Form.Select aria-label=\"Default select example\" className=\"w-25\" value={table.status} onChange={(e) => this.handleStatusChange(e)}>\n    //                    <option value=\"In_Use\">In Use</option>\n    //                    <option value=\"Empty\">Empty</option>\n    //                </Form.Select>\n    //            </Form.Group>\n    //            <Form.Label>Customers</Form.Label>\n    //            <Form.Control type=\"number\" className=\"w-25\" min=\"0\" defaultValue={table.guest_n} />\n    //                {\n    //    this.state.orders && this.state.orders.length ? this.state.orders.map((order, index) => (\n    //        <Fragment key={`${order}~${index}`}>\n    //            <Row className=\"my-3\">\n    //                <Col>\n    //                    <Order data={order} getTables={this.props.getTables} getOrders={this.getOrders} />\n    //                </Col>\n    //            </Row>\n    //        </Fragment>\n    //    )) : null\n    //}\n    //<div className=\"d-flex justify-content-end\">\n    //    <a href={qr} target=\"_blank\" download><Button variant=\"info\" className=\"m-2\">QR Code</Button></a>\n    //    <Button variant=\"secondary\" className=\"m-2\" onClick={() => this.props.handleAdd(\"update\", table)}>Edit Table</Button>\n    //    <Button variant=\"danger\" className=\"m-2\" onClick={() => this.handleStatusChange(\"Empty\")}>Close Table</Button>\n    //    <Button variant=\"primary\" className=\"m-2\" onClick={() => this.handleStatusChange(\"In_Use\")}>Open Table</Button>\n    //</div>\n    ;\n  }\n\n}\n\nconst mapStateToProps = store => {\n  return {\n    restaurant: store.restaurantState.restaurant,\n    user: store.userState.user\n  };\n};\n\nexport default connect(mapStateToProps)(employeeItem);","map":{"version":3,"names":["React","Fragment","Form","Button","Card","Row","Col","Container","connect","employeeItem","Component","constructor","props","state","modalShow","render","employees","length","map","employee","index","emp_no","first_name","last_name","dept_name","title","mapStateToProps","store","restaurant","restaurantState","user","userState"],"sources":["/Users/bryancaldera/CS MS/CMPE272_Group_Project/cmpe272_final_project/frontend/src/components/admin/employee_list.js"],"sourcesContent":["import React, { Fragment } from \"react\";\nimport { Form, Button, Card, Row, Col, Container } from \"react-bootstrap\";\nimport { connect } from 'react-redux';\n\nclass employeeItem extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modalShow: false,\n        };\n    }\n\n    render() {\n        const employees = this.props.employees;\n        return (\n            <>\n                    {employees && employees.length ? employees.map((employee, index) => (\n                        <Fragment key={`${employee}~${index}`}>\n                            <Row>\n                                <Card className=\"mb-1 items-body\">\n                                    <Card.Body>\n                                        <Row>\n                                            <Col>\n                                                {employee.emp_no}\n                                            </Col>\n                                            <Col>\n                                                {employee.first_name}\n                                            </Col>\n                                            <Col>\n                                                {employee.last_name}\n                                            </Col>\n                                            <Col>\n                                                {employee.dept_name}\n                                            </Col>\n                                            <Col>\n                                                {employee.title}\n                                            </Col>\n                                            <Col>\n                                                <a className=\"btn btn-primary\" href={\"/user?emp_no=\" + employee.emp_no}>Details</a>\n                                            </Col>\n                                        </Row>\n\n                                    </Card.Body>\n                                </Card>\n                            </Row>\n                        </Fragment>\n                    ))\n                        : <></>\n                    }\n                \n                <br />\n            </>\n            //{\n            //    this.state.modalShow ?\n            //        <TablePopup\n            //            show={this.state.modalShow}\n            //            onHide={() => this.setState({ modalShow: false })}\n            //            table={this.state.item}\n            //            operation={this.state.operation}\n            //            getTables={this.getTables}\n            //        />\n            //        :\n            //        <></>\n            //}\n            //    <Card.Title>{table.name}</Card.Title>\n            //            <p className=\"card-text\">Capacity: {table.capacity}</p>\n            //            <p className=\"card-text\">Description: {table.description}</p>\n            //            <p className=\"card-text\">Table Status: {statusMap[table.status]}</p>\n            //            <Form.Group>\n            //                <Form.Label>Status</Form.Label>\n            //                <Form.Select aria-label=\"Default select example\" className=\"w-25\" value={table.status} onChange={(e) => this.handleStatusChange(e)}>\n            //                    <option value=\"In_Use\">In Use</option>\n            //                    <option value=\"Empty\">Empty</option>\n            //                </Form.Select>\n            //            </Form.Group>\n            //            <Form.Label>Customers</Form.Label>\n            //            <Form.Control type=\"number\" className=\"w-25\" min=\"0\" defaultValue={table.guest_n} />\n            //                {\n            //    this.state.orders && this.state.orders.length ? this.state.orders.map((order, index) => (\n            //        <Fragment key={`${order}~${index}`}>\n            //            <Row className=\"my-3\">\n            //                <Col>\n            //                    <Order data={order} getTables={this.props.getTables} getOrders={this.getOrders} />\n            //                </Col>\n            //            </Row>\n            //        </Fragment>\n            //    )) : null\n            //}\n            //<div className=\"d-flex justify-content-end\">\n            //    <a href={qr} target=\"_blank\" download><Button variant=\"info\" className=\"m-2\">QR Code</Button></a>\n            //    <Button variant=\"secondary\" className=\"m-2\" onClick={() => this.props.handleAdd(\"update\", table)}>Edit Table</Button>\n            //    <Button variant=\"danger\" className=\"m-2\" onClick={() => this.handleStatusChange(\"Empty\")}>Close Table</Button>\n            //    <Button variant=\"primary\" className=\"m-2\" onClick={() => this.handleStatusChange(\"In_Use\")}>Open Table</Button>\n            //</div>\n        );\n    }\n}\n\nconst mapStateToProps = store => {\n    return {\n        restaurant: store.restaurantState.restaurant,\n        user: store.userState.user,\n    };\n};\n\nexport default connect(mapStateToProps)(employeeItem);\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,IAAvB,EAA6BC,GAA7B,EAAkCC,GAAlC,EAAuCC,SAAvC,QAAwD,iBAAxD;AACA,SAASC,OAAT,QAAwB,aAAxB;;;;AAEA,MAAMC,YAAN,SAA2BT,KAAK,CAACU,SAAjC,CAA2C;EACvCC,WAAW,CAACC,KAAD,EAAQ;IACf,MAAMA,KAAN;IACA,KAAKC,KAAL,GAAa;MACTC,SAAS,EAAE;IADF,CAAb;EAGH;;EAEDC,MAAM,GAAG;IACL,MAAMC,SAAS,GAAG,KAAKJ,KAAL,CAAWI,SAA7B;IACA,oBACI;MAAA,WACSA,SAAS,IAAIA,SAAS,CAACC,MAAvB,GAAgCD,SAAS,CAACE,GAAV,CAAc,CAACC,QAAD,EAAWC,KAAX,kBAC3C,QAAC,QAAD;QAAA,uBACI,QAAC,GAAD;UAAA,uBACI,QAAC,IAAD;YAAM,SAAS,EAAC,iBAAhB;YAAA,uBACI,QAAC,IAAD,CAAM,IAAN;cAAA,uBACI,QAAC,GAAD;gBAAA,wBACI,QAAC,GAAD;kBAAA,UACKD,QAAQ,CAACE;gBADd;kBAAA;kBAAA;kBAAA;gBAAA,QADJ,eAII,QAAC,GAAD;kBAAA,UACKF,QAAQ,CAACG;gBADd;kBAAA;kBAAA;kBAAA;gBAAA,QAJJ,eAOI,QAAC,GAAD;kBAAA,UACKH,QAAQ,CAACI;gBADd;kBAAA;kBAAA;kBAAA;gBAAA,QAPJ,eAUI,QAAC,GAAD;kBAAA,UACKJ,QAAQ,CAACK;gBADd;kBAAA;kBAAA;kBAAA;gBAAA,QAVJ,eAaI,QAAC,GAAD;kBAAA,UACKL,QAAQ,CAACM;gBADd;kBAAA;kBAAA;kBAAA;gBAAA,QAbJ,eAgBI,QAAC,GAAD;kBAAA,uBACI;oBAAG,SAAS,EAAC,iBAAb;oBAA+B,IAAI,EAAE,kBAAkBN,QAAQ,CAACE,MAAhE;oBAAA;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA;gBADJ;kBAAA;kBAAA;kBAAA;gBAAA,QAhBJ;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YADJ;cAAA;cAAA;cAAA;YAAA;UADJ;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA;MADJ,GAAgB,GAAEF,QAAS,IAAGC,KAAM,EAApC;QAAA;QAAA;QAAA;MAAA,QAD6B,CAAhC,gBA+BK,qCAhCd,eAmCI;QAAA;QAAA;QAAA;MAAA,QAnCJ;IAAA,gBADJ,CAsCI;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IA/EJ;EAiFH;;AA3FsC;;AA8F3C,MAAMM,eAAe,GAAGC,KAAK,IAAI;EAC7B,OAAO;IACHC,UAAU,EAAED,KAAK,CAACE,eAAN,CAAsBD,UAD/B;IAEHE,IAAI,EAAEH,KAAK,CAACI,SAAN,CAAgBD;EAFnB,CAAP;AAIH,CALD;;AAOA,eAAetB,OAAO,CAACkB,eAAD,CAAP,CAAyBjB,YAAzB,CAAf"},"metadata":{},"sourceType":"module"}