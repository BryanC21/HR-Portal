{"ast":null,"code":"import { SET_RESTAURANT, DEL_RESTAURANT, SET_CATEGORIES, SET_MENU, SET_DEFAULT_USER_ID } from './actionTypes';\nexport const setRestaurant = restaurant => {\n  return {\n    type: SET_RESTAURANT,\n    restaurant\n  };\n};\nexport const delRestaurant = () => {\n  return {\n    type: DEL_RESTAURANT\n  };\n};\nexport const setCategories = categories => {\n  return {\n    type: SET_CATEGORIES,\n    categories\n  };\n};\nexport const setMenu = menu => {\n  return {\n    type: SET_MENU,\n    menu\n  };\n};\nexport const setDefaultUserId = id => {\n  return {\n    type: SET_DEFAULT_USER_ID,\n    id\n  };\n};\nexport const getDefaultUserId = () => {\n  const api = process.env.REACT_APP_API || \"http://192.168.56.1:4080\";\n  return dispatch => fetch(api + \"/api/restaurant/getDefaultUser\", {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(response => response.json()).then(data => {\n    if (data.code === 200) {\n      dispatch(setDefaultUserId(data.user.id));\n    } else {\n      alert(data.message);\n    }\n  });\n};\nexport const getRestaurant = restaurantId => {\n  const api = process.env.REACT_APP_API || \"http://192.168.56.1:4080\";\n  return dispatch => fetch(api + \"/api/restaurant/get\", {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      id: restaurantId\n    })\n  }).then(response => response.json()).then(data => {\n    if (data.code === 200) {\n      fetch(api + \"/api/restaurant/table/getpickup\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          restaurant_id: restaurantId\n        })\n      }).then(result => result.json()).then(table => {\n        if (table.code === 200) {\n          data.restaurant.pickup = table.table[0];\n          dispatch(setRestaurant(data.restaurant));\n        } else {\n          alert(table.message);\n        }\n      });\n    } else {\n      alert(data.message);\n    }\n  });\n};\nexport const getAdminRestaurant = user_id => {\n  const api = process.env.REACT_APP_API || \"http://192.168.56.1:4080\";\n  return dispatch => fetch(api + \"/api/restaurant/getByOwnerID\", {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      id: user_id\n    })\n  }).then(response => response.json()).then(data => {\n    if (data.code === 200) {\n      dispatch(setRestaurant(data.restaurant));\n    } else {\n      alert(data.message);\n    }\n  });\n};\n\nasync function getCategories(restaurant_id) {\n  const api = process.env.REACT_APP_API || \"http://192.168.56.1:4080\";\n  const response = await fetch(api + \"/api/restaurant/category/get\", {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      id: restaurant_id\n    })\n  });\n  const data = await response.json();\n\n  if (data.code === 200) {\n    return data.menu_item;\n  } else {\n    return [];\n  }\n}\n\nasync function getMenuHelper(restaurant_id, dispatch) {\n  const api = process.env.REACT_APP_API || \"http://192.168.56.1:4080\";\n  const categories = await getCategories(restaurant_id);\n  fetch(api + \"/api/restaurant/menu/getSorted\", {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      id: restaurant_id\n    })\n  }).then(response => response.json()).then(data => {\n    if (data.code === 200) {\n      const menu = [];\n      const category_index = {};\n      categories.map((category, index) => {\n        menu.push({ ...category,\n          menu: []\n        });\n        category_index[category.name] = index;\n      });\n      const menu_item = data.menu_item;\n      menu_item.map((item, index) => {\n        menu[category_index[item.category]].menu.push(item);\n      });\n      dispatch(setMenu(menu));\n    } else {\n      alert(data.message);\n    }\n  });\n}\n\nexport const getMenu = restaurant_id => {\n  return dispatch => getMenuHelper(restaurant_id, dispatch);\n};","map":{"version":3,"names":["SET_RESTAURANT","DEL_RESTAURANT","SET_CATEGORIES","SET_MENU","SET_DEFAULT_USER_ID","setRestaurant","restaurant","type","delRestaurant","setCategories","categories","setMenu","menu","setDefaultUserId","id","getDefaultUserId","api","process","env","REACT_APP_API","dispatch","fetch","method","headers","then","response","json","data","code","user","alert","message","getRestaurant","restaurantId","body","JSON","stringify","restaurant_id","result","table","pickup","getAdminRestaurant","user_id","getCategories","menu_item","getMenuHelper","category_index","map","category","index","push","name","item","getMenu"],"sources":["/Users/bryancaldera/CS MS/CMPE272_Group_Project/cmpe272_final_project/frontend/src/actions/restaurantActions.js"],"sourcesContent":["import {\n    SET_RESTAURANT,\n    DEL_RESTAURANT,\n    SET_CATEGORIES,\n    SET_MENU,\n    SET_DEFAULT_USER_ID,\n} from './actionTypes';\n\nexport const setRestaurant = restaurant => {\n    return {\n        type: SET_RESTAURANT,\n        restaurant\n    };\n};\n\nexport const delRestaurant = () => {\n    return {\n        type: DEL_RESTAURANT,\n    };\n};\n\nexport const setCategories = categories => {\n    return {\n        type: SET_CATEGORIES,\n        categories\n    };\n};\n\nexport const setMenu = menu => {\n    return {\n        type: SET_MENU,\n        menu\n    };\n};\n\nexport const setDefaultUserId = id => {\n    return {\n        type: SET_DEFAULT_USER_ID,\n        id\n    };\n};\n\nexport const getDefaultUserId = () => {\n    const api = process.env.REACT_APP_API || \"http://192.168.56.1:4080\"\n    return dispatch => (fetch(api + \"/api/restaurant/getDefaultUser\",\n        {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }\n    ).then(response => response.json())\n        .then(data => {\n            if (data.code === 200) {\n                dispatch(setDefaultUserId(data.user.id));\n            } else {\n                alert(data.message);\n            }\n        })\n    )\n};\n\nexport const getRestaurant = restaurantId => {\n    const api = process.env.REACT_APP_API || \"http://192.168.56.1:4080\"\n    return dispatch => (fetch(api + \"/api/restaurant/get\",\n        {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                id: restaurantId,\n            }),\n        }\n    ).then(response => response.json())\n        .then(data => {\n            if (data.code === 200) {\n                fetch(api + \"/api/restaurant/table/getpickup\",\n                    {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json',\n                        },\n                        body: JSON.stringify({\n                            restaurant_id: restaurantId,\n                        }),\n                    }\n                ).then(result => result.json())\n                    .then(table => {\n                        if (table.code === 200) {\n                            data.restaurant.pickup = table.table[0];\n                            dispatch(setRestaurant(data.restaurant));\n                        } else {\n                            alert(table.message);\n                        }\n                    })\n            } else {\n                alert(data.message);\n            }\n        })\n    )\n}\n\n\nexport const getAdminRestaurant = user_id => {\n    const api = process.env.REACT_APP_API || \"http://192.168.56.1:4080\"\n    return dispatch => (fetch(api + \"/api/restaurant/getByOwnerID\",\n        {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                id: user_id,\n            }),\n        }\n    ).then(response => response.json())\n        .then(data => {\n            if (data.code === 200) {\n                dispatch(setRestaurant(data.restaurant));\n            } else {\n                alert(data.message);\n            }\n        })\n        )\n}\n\nasync function getCategories(restaurant_id) {\n    const api = process.env.REACT_APP_API || \"http://192.168.56.1:4080\";\n    const response = await fetch(api + \"/api/restaurant/category/get\",\n        {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                id: restaurant_id,\n            }),\n        }\n    );\n    const data = await response.json();\n    if (data.code === 200) {\n        return data.menu_item;\n    } else {\n        return [];\n    }\n}\n\nasync function getMenuHelper(restaurant_id, dispatch) {\n    const api = process.env.REACT_APP_API || \"http://192.168.56.1:4080\";\n    const categories = await getCategories(restaurant_id);\n    fetch(api + \"/api/restaurant/menu/getSorted\",\n        {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                id: restaurant_id,\n            }),\n        }\n    ).then(response => response.json())\n        .then(data => {\n            if (data.code === 200) {\n                const menu = [];\n                const category_index = {};\n                categories.map((category, index) => {\n                    menu.push({ ...category, menu: [] });\n                    category_index[category.name] = index;\n                });\n                const menu_item = data.menu_item;\n                menu_item.map((item, index) => {\n                    menu[category_index[item.category]].menu.push(item);\n                });\n                dispatch(setMenu(menu));\n            } else {\n                alert(data.message);\n            }\n        })\n}\n\nexport const getMenu = (restaurant_id) => {\n    return dispatch => (getMenuHelper(restaurant_id, dispatch))\n}\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}